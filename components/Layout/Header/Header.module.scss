@use '../../../scss/abstracts/colors' as colors;
@use '../../../scss/abstracts/variables' as var;
@use '../../../scss/abstracts/mixins' as mixins;

.header {
  width: 100%;
  padding: 0 2rem;

  position: fixed;
  top: 0;
  display: flex;
  align-items: center;
  justify-content: space-between;
  height: var.$headerHeight;
  z-index: 1000;
  transition: background-color 0.2s ease;
  box-shadow: map-get(var.$shadow, 'header');

  @include mixins.breakpoint('>=md') {
    justify-content: space-between;
  }
}

.header.light {
  background-color: map-get(colors.$background, 'light');
}
.header.dark {
  background-color: map-get(colors.$background, 'dark');
}

.main-banner {
  width: 50%;
  position: absolute;
  left: 25%;
  z-index: 10;
  transition: color 0.2s ease, filter 0.25s ease;

  @include mixins.flex(row, center, center);

  @include mixins.breakpoint('>=sm') {
    width: fit-content;
    position: static;
  }

  .logo {
    cursor: pointer;
    @include mixins.flex(row, center, center);
  }
}
.main-banner:hover {
  color: map-get(colors.$primary, 'main');
  filter: brightness(1.25);
}

.main-title {
  // color: map-get(colors.$primary, 'main');
  margin-left: 0.125rem;
  font-weight: 200;
  font-size: 1.75rem;
  display: none;

  @include mixins.breakpoint('>=sm') {
    display: flex;
  }

  strong {
    font-weight: 600;
  }
}

.alias {
  font-weight: 800;
  font-size: 1.75rem;
  width: 100%;
  @include mixins.flex-row();
  justify-content: center;

  @include mixins.breakpoint('>=sm') {
    // width: 25%;
    justify-content: space-between;
  }
}

.home-icon {
  font-size: 2.25rem;
  @include mixins.breakpoint('>=sm') {
    // font-size: 3rem;
    font-size: 1;
  }
  display: flex;
  background-color: transparent;
  // border-radius: 50%;
  // padding: 0.25rem;
  // @include mixins.shadow(0px, 1px, 3px, 0px, 0.1);
}

.menu-button__container {
  position: absolute;
  z-index: 5;
  right: 0;
  height: 100%;
  justify-content: center;
  width: 100%;

  @include mixins.flex(row, space-between, center);
  @include mixins.breakpoint('>=sm') {
    position: static;
    width: fit-content;
    @include mixins.flex(row, center, center);
  }

  .menu-button {
    border: 2px solid rgba($color: map-get(colors.$primary, 'main'), $alpha: 0);
    border-radius: 45%;
    padding: 0.25rem;
    margin-right: 1rem;
    transition: border 0.2s ease;
    @include mixins.flex(column);
    @include mixins.breakpoint('>=md') {
      display: none;
    }

    .burger-icon {
      font-size: 1.25rem;
      color: map-get(colors.$primary, 'main');
    }

    &:hover {
      font-size: 1.25rem;
      border: 2px solid
        rgba($color: map-get(colors.$primary, 'light'), $alpha: 1);
    }
    &.active {
      font-size: 1.25rem;
      border: 2px solid
        rgba($color: map-get(colors.$primary, 'main'), $alpha: 1);
    }
  }
}

.nav {
  @include mixins.flex(row, center, center);

  height: 100%;

  .nav-links {
    width: 100%;
    height: 100vh;
    // on mobile
    position: absolute;
    top: 0;
    left: -40%;
    opacity: 0;
    &.active {
      left: 0;
      opacity: 1;
    }
    &.light {
      // color: map-get(colors.$text, 'main');
      background-color: map-get(colors.$background, 'light');
    }
    &.dark {
      // color: map-get(colors.$text, 'contrast');
      background-color: map-get(colors.$background, 'dark');
    }

    font-weight: 600;
    font-size: 0.85rem;
    letter-spacing: 1.75px;
    text-transform: uppercase;
    transition: opacity 0.3s ease-out, left 0.4s ease-out;

    // background-color: map-get(colors.$background, 'dark');

    @include mixins.flex(column, space-evenly, center);
    @include mixins.breakpoint('>=sm') {
      margin: 0;
      padding: 0;
    }

    @include mixins.breakpoint('>=md') {
      opacity: 1;
      height: 100%;
      position: static;
      @include mixins.flex(row, center, center);
    }

    .__link {
      padding: 0 1rem;
      @include mixins.flex(row, center, center);
      cursor: pointer;
      transition: color 0.2s ease, filter 0.25s ease;

      .social-icon {
        color: map-get(colors.$primary, 'main');
        font-size: 1.5rem;
      }

      .cv-icon {
        font-size: 1rem;
      }
    }
    .__link.section:hover {
      color: map-get(colors.$primary, 'main');
      filter: brightness(1.5);
    }
    .__link.button:hover {
      filter: brightness(1.25);
    }

    .cv-link {
      @include mixins.action-button-text();

      @include mixins.filled-button(
        map-get(colors.$primary, 'main'),
        0.5rem,
        0.5rem,
        1.5rem
      );
      .cv-link__text {
        padding: 0 0.25rem;
      }
    }
  }
}
